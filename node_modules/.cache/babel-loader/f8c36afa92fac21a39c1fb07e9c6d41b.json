{"ast":null,"code":"var _jsxFileName = \"/home/pedro/projects/challenge-mission-brasil/src/pages/carrinho/index.js\";\nimport React, { Component } from \"react\";\n\nclass Carrinho extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const locale = \"pt-BR\";\n    const currency = \"BRL\";\n    const fullCurrencyFormat = new Intl.NumberFormat(locale, {\n      style: \"currency\",\n      currency: currency\n    });\n    var order = this.props.location.list.productsSelected;\n\n    if (order) {\n      var orderResume = order.map((item, key) => {\n        let price = fullCurrencyFormat.format(item.price);\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cards-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cards-item-aligment\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, item.name), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, price))));\n      });\n    }\n\n    let orderTotal = 0; //Função que faz o somatório de todos os valores\n\n    for (let index in order) {\n      let price = order[index].price;\n      orderTotal = Number(orderTotal) + Number(price);\n    }\n\n    const orderTotalFormatted = fullCurrencyFormat.format(orderTotal);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Resumo do Pedido\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, orderResume), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"valueTotal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \" total\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, orderTotalFormatted)))));\n  }\n\n}\n\nexport default Carrinho;","map":{"version":3,"sources":["/home/pedro/projects/challenge-mission-brasil/src/pages/carrinho/index.js"],"names":["React","Component","Carrinho","constructor","state","data","componentDidMount","render","locale","currency","fullCurrencyFormat","Intl","NumberFormat","style","order","props","location","list","productsSelected","orderResume","map","item","key","price","format","name","orderTotal","index","Number","orderTotalFormatted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,OAAf;AACA,UAAMC,QAAQ,GAAG,KAAjB;AACA,UAAMC,kBAAkB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBJ,MAAtB,EAA8B;AACvDK,MAAAA,KAAK,EAAE,UADgD;AAEvDJ,MAAAA,QAAQ,EAAEA;AAF6C,KAA9B,CAA3B;AAKA,QAAIK,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,gBAArC;;AAEA,QAAIJ,KAAJ,EAAW;AACT,UAAIK,WAAW,GAAGL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACzC,YAAIC,KAAK,GAAGb,kBAAkB,CAACc,MAAnB,CAA0BH,IAAI,CAACE,KAA/B,CAAZ;AAEA,4BACE;AAAI,UAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,IAAI,CAACI,IAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQF,KAAR,CAFF,CADF,CADF,CADF;AAUD,OAbiB,CAAlB;AAcD;;AACD,QAAIG,UAAU,GAAG,CAAjB,CA1BO,CA4BP;;AACA,SAAK,IAAIC,KAAT,IAAkBb,KAAlB,EAAyB;AACvB,UAAIS,KAAK,GAAGT,KAAK,CAACa,KAAD,CAAL,CAAaJ,KAAzB;AACAG,MAAAA,UAAU,GAAGE,MAAM,CAACF,UAAD,CAAN,GAAqBE,MAAM,CAACL,KAAD,CAAxC;AACD;;AACD,UAAMM,mBAAmB,GAAGnB,kBAAkB,CAACc,MAAnB,CAA0BE,UAA1B,CAA5B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,WAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOU,mBAAP,CAFF,CADF,CAFF,CAFF,CADF;AAcD;;AAzD8B;;AA4DjC,eAAe3B,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Carrinho extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n  componentDidMount() {}\n\n  render() {\n    const locale = \"pt-BR\";\n    const currency = \"BRL\";\n    const fullCurrencyFormat = new Intl.NumberFormat(locale, {\n      style: \"currency\",\n      currency: currency,\n    });\n\n    var order = this.props.location.list.productsSelected;\n\n    if (order) {\n      var orderResume = order.map((item, key) => {\n        let price = fullCurrencyFormat.format(item.price);\n\n        return (\n          <li key={key}>\n            <div className=\"cards-item\">\n              <div className=\"cards-item-aligment\">\n                <span>{item.name}</span>\n                <small>{price}</small>\n              </div>\n            </div>\n          </li>\n        );\n      });\n    }\n    let orderTotal = 0;\n\n    //Função que faz o somatório de todos os valores\n    for (let index in order) {\n      let price = order[index].price;\n      orderTotal = Number(orderTotal) + Number(price);\n    }\n    const orderTotalFormatted = fullCurrencyFormat.format(orderTotal);\n    return (\n      <div className=\"container\">\n        <h1>Resumo do Pedido</h1>\n        <div className=\"content\">\n          <ul>{orderResume}</ul>\n          <div>\n            <div className=\"valueTotal\">\n              <h4> total</h4>\n              <span>{orderTotalFormatted}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carrinho;\n"]},"metadata":{},"sourceType":"module"}