{"ast":null,"code":"var _jsxFileName = \"/home/pedro/projects/challenge-mission-brasil/src/pages/cadastroProduto/index.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from \"react-text-mask\";\nimport TextInput from \"../../components/TextInput\";\nimport { BsPerson } from \"react-icons/bs\";\nimport { BiStore, BiDollar } from \"react-icons/bi\";\nimport \"./index.scss\";\n\nclass CadastroProduto extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.handleSendProduct = this.handleSendProduct.bind(this);\n  }\n\n  handleSendProduct() {\n    let products = this.state.data;\n    this.props.history.push({\n      pathname: process.env.PUBLIC_URL + `/listaproduto`,\n      search: \"\",\n      list: {\n        products\n      }\n    });\n  }\n\n  render() {\n    //const phoneNumberMask = [/[0-9]/, \".\", /\\d/, /\\d/, \",\", /\\d/, /\\d/];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \" Cadastro de Produtos\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        nameProduct: \"\",\n        price: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        nameProduct: Yup.string().required(\"Nome do produto obrigatório\"),\n        price: Yup.string().min(2, \"O valor deve ser maior que 00,01\") //.max(4, \"O valor não pode ser maior que 99,99\")\n        .required(\"O preço do produto é obrigatório\")\n      }),\n      onSubmit: (fields, {\n        setSubmitting,\n        setFieldValue\n      }) => {\n        const changedValue = fields.price.replace(/\\(|\\)|\\s|-/g, \"\");\n        setFieldValue(\"price\", changedValue);\n        let name = fields.nameProduct;\n        let price = fields.price;\n        let product = [name, price];\n        this.setState({\n          data: [...this.state.data, {\n            name: name,\n            price: price\n          }]\n        });\n        alert(\"Produto adicionado com sucesso\");\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"nameProduct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, \"Nome do Produto \", /*#__PURE__*/React.createElement(BiStore, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Field, {\n        name: \"nameProduct\",\n        type: \"text\",\n        className: \"form-control\" + (errors.nameProduct && touched.nameProduct ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"nameProduct\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, \"Pre\\xE7o do Produto \", /*#__PURE__*/React.createElement(BiDollar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }\n      })), /*#__PURE__*/React.createElement(Field, {\n        name: \"price\",\n        render: ({\n          field\n        }) => /*#__PURE__*/React.createElement(MaskedInput, Object.assign({}, field, {\n          mask: phoneNumberMask,\n          placeholder: \"\",\n          type: \"text\",\n          className: \"form-control\" + (errors.price && touched.price ? \" is-invalid\" : \"\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"price\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"group-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, \"Adicionar Produto\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, \"Limpar\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSendProduct,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      }, \"Ir para lista de produtos\"))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default CadastroProduto;","map":{"version":3,"sources":["/home/pedro/projects/challenge-mission-brasil/src/pages/cadastroProduto/index.js"],"names":["React","Component","Formik","Form","Field","ErrorMessage","Yup","useFormik","InputMask","MaskedInput","TextInput","BsPerson","BiStore","BiDollar","CadastroProduto","constructor","state","data","handleSendProduct","bind","products","props","history","push","pathname","process","env","PUBLIC_URL","search","list","render","nameProduct","price","object","shape","string","required","min","fields","setSubmitting","setFieldValue","changedValue","replace","name","product","setState","alert","errors","status","touched","field","phoneNumberMask"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from \"react-text-mask\";\n\nimport TextInput from \"../../components/TextInput\";\nimport { BsPerson } from \"react-icons/bs\";\nimport { BiStore, BiDollar } from \"react-icons/bi\";\nimport \"./index.scss\";\nclass CadastroProduto extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n    this.handleSendProduct = this.handleSendProduct.bind(this);\n  }\n\n  handleSendProduct() {\n    let products = this.state.data;\n    this.props.history.push({\n      pathname: process.env.PUBLIC_URL + `/listaproduto`,\n      search: \"\",\n      list: { products },\n    });\n  }\n  render() {\n    //const phoneNumberMask = [/[0-9]/, \".\", /\\d/, /\\d/, \",\", /\\d/, /\\d/];\n\n    return (\n      <div className={\"container\"}>\n        <h1> Cadastro de Produtos</h1>\n        <div className={\"content-home\"}>\n          <Formik\n            initialValues={{\n              nameProduct: \"\",\n              price: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              nameProduct: Yup.string().required(\"Nome do produto obrigatório\"),\n\n              price: Yup.string()\n                .min(2, \"O valor deve ser maior que 00,01\")\n                //.max(4, \"O valor não pode ser maior que 99,99\")\n                .required(\"O preço do produto é obrigatório\"),\n            })}\n            onSubmit={(fields, { setSubmitting, setFieldValue }) => {\n              const changedValue = fields.price.replace(/\\(|\\)|\\s|-/g, \"\");\n              setFieldValue(\"price\", changedValue);\n              let name = fields.nameProduct;\n              let price = fields.price;\n              let product = [name, price];\n              this.setState({\n                data: [...this.state.data, { name: name, price: price }],\n              });\n\n              alert(\"Produto adicionado com sucesso\");\n            }}\n            render={({ errors, status, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"nameProduct\">\n                    Nome do Produto <BiStore />\n                  </label>\n                  <Field\n                    name=\"nameProduct\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.nameProduct && touched.nameProduct\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"nameProduct\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"price\">\n                    Preço do Produto <BiDollar />\n                  </label>\n                  <Field\n                    name=\"price\"\n                    render={({ field }) => (\n                      <MaskedInput\n                        {...field}\n                        mask={phoneNumberMask}\n                        placeholder=\"\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.price && touched.price ? \" is-invalid\" : \"\")\n                        }\n                      />\n                    )}\n                  />\n                  <ErrorMessage\n                    name=\"price\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"group-button\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Adicionar Produto\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Limpar\n                  </button>\n                  <div>\n                    <small>\n                      <a onClick={this.handleSendProduct}>\n                        Ir para lista de produtos\n                      </a>\n                    </small>\n                  </div>\n                </div>\n              </Form>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CadastroProduto;\n"]},"metadata":{},"sourceType":"module"}